"use strict";!function e(n,t,r){function s(o,c){if(!t[o]){if(!n[o]){var l="function"==typeof require&&require;if(!c&&l)return l(o,!0);if(i)return i(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var a=t[o]={exports:{}};n[o][0].call(a.exports,function(e){var t=n[o][1][e];return s(t?t:e)},a,a.exports,e,n,t,r)}return t[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(e,n,t){SupCore.system.registerPlugin("typescriptAPI","Sup.CubicModel",{code:"namespace Sup {\n  export class CubicModel extends Asset {\n    getPixelsPerUnit() { return this.__inner.pixelsPerUnit; }\n  }\n}\n",defs:"declare namespace Sup {\n  class CubicModel extends Asset {\n    getPixelsPerUnit(): number;\n  }\n}\n"}),SupCore.system.registerPlugin("typescriptAPI","CubicModelRenderer",{code:'namespace Sup {\n  let materialTypes = ["basic", "phong"];\n\n  export class CubicModelRenderer extends Sup.ActorComponent {\n    constructor(actor: Actor, pathOrAsset: string|CubicModel, materialIndex: number) {\n      super(actor);\n      this.__inner = new SupEngine.componentClasses.CubicModelRenderer(this.actor.__inner);\n      if (pathOrAsset != null) {\n        let cubicModelAsset = (typeof pathOrAsset === "string") ? get(pathOrAsset, CubicModel) : <CubicModel>pathOrAsset;\n        this.__inner.opacity = cubicModelAsset.__inner.opacity;\n        this.setCubicModel(cubicModelAsset, materialIndex);\n      }\n      this.__inner.__outer = this;\n      this.actor.cubicModelRenderer = this;\n    }\n    destroy() {\n      this.actor.cubicModelRenderer = null;\n      super.destroy();\n    }\n\n    getCubicModel() { return (this.__inner.asset != null) ? this.__inner.asset.__outer : null; }\n    setCubicModel(pathOrAsset: string|CubicModel, materialIndex: number) {\n      let material: string;\n      if (materialIndex != null) material = materialTypes[materialIndex];\n\n      let cubicModelAsset = (typeof pathOrAsset === "string") ? get(pathOrAsset, CubicModel) : <CubicModel>pathOrAsset;\n      this.__inner.setCubicModel((cubicModelAsset != null) ? cubicModelAsset.__inner : null, material);\n      return this;\n    }\n  }\n\n  export namespace CubicModelRenderer {\n    export enum MaterialType { Basic, Phong };\n  }\n}\n',defs:"declare namespace Sup {\n  class CubicModelRenderer extends ActorComponent {\n    constructor(actor: Actor, pathOrAsset?: string|CubicModel, materialType?: CubicModelRenderer.MaterialType );\n\n    getCubicModel(): CubicModel;\n    setCubicModel(pathOrAsset: string|CubicModel, materialType?: CubicModelRenderer.MaterialType): CubicModelRenderer;\n  }\n\n  namespace CubicModelRenderer {\n    enum MaterialType { Basic, Phong }\n  }\n}\n",exposeActorComponent:{propertyName:"cubicModelRenderer",className:"Sup.CubicModelRenderer"}})},{}]},{},[1]);